{"version":3,"sources":["server.js"],"names":["express","require","path","upload","multer","dest","__dirname","app","imageStorage","diskStorage","PORT","set","req","file","cb","Date","now","extname","originalname","imageUpload","storage","limits","fileFilter","match","undefined","use","single","res","post","render","filename","next","im_loc","send","status","error","get","listen","console","log"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAMD,QAAQ,QADdD,OAAUC,QAAQ,UAGlBE,OAASC,OAAO,CAACC,KAAMC,UAAY,oBAEnCC,IAAMP,UAHNI,KAASH,IACfM,IAAMJ,IAAAA,cAAgB,OAAA,IAAtBK,aAAAJ,OAAAK,YAAA,CAGMC,YAAN,gBAEIC,SAAI,SAAAC,EAARC,EAAAC,GAEMN,EAAAA,KAAeJ,EAAAA,UAAOK,IAAYM,KAAAC,MACpCd,KAAAe,QAAAJ,EAAAK,kBADJC,YAAAf,OAAA,CAWMe,QAAAA,aACFC,OAASZ,CACTa,SAAQ,KAGRC,WAhBJ,SAgBeV,EAAKC,EAAMC,GALC,IAAAD,EAAAK,aAAAK,MAAA,gBAMhBV,OAAKK,EAAAA,IAAAA,MAAaK,0BAEpBT,OAAAU,GAAU,MAGhBjB,IAAAkB,IAAAzB,QAAA,OAAA,YAGHO,IAAIkB,KAAIzB,UAAOmB,YAAQO,OAAvB,SAAA,SAAAd,EAAAe,GAEIC,EAAJC,OAAS,aAAWV,CAAAA,OAAYO,EAAOb,KAAnBiB,YAChBH,SAAAA,EAAIE,EAAOF,EAAAI,GAAcC,EAAAA,OAAW,KAAHC,KAASH,CAAAA,MAAAA,EAAAA,YAE1CH,IAAAA,IAAIO,IAAO,SAAAtB,EAAKqB,GAAOE,EAAAA,OAAOA,eAGlC5B,IAAI6B,IAAI,WAAK,SAAAxB,EAAAe,GACTA,EAAIE,OAAO,iBAIbF,IAAAA,IAAIE,SAAO,SAAAjB,EAAAe,GADbA,EAAAE,OAAA,eAMCtB,IAFD6B,IAAA,OAAA,SAAAxB,EAAAe,GAIApB,EAAI6B,OAAI,aAIR7B,IAAI8B,OAAO3B,KAAM,WACb4B,QAAQC,IAAI,gBAAkB7B","file":"server.min.js","sourcesContent":["const express = require('express');\nconst path= require('path');\nconst multer = require('multer');\nconst upload = multer({dest: __dirname + '/uploads/images'});\n\nconst app = express();\nconst PORT = 3000;\n\napp.set(\"view engine\", \"ejs\");\n\nconst imageStorage = multer.diskStorage({\n    // Destination to store image     \n    destination: 'uploads/image', \n      filename: (req, file, cb) => {\n          cb(null, file.fieldname + '_' + Date.now() \n             + path.extname(file.originalname))\n            // file.fieldname is name of the field (image)\n            // path.extname get the uploaded file extension\n    }\n});\n\nconst imageUpload = multer({\n    storage: imageStorage,\n    limits: {\n      fileSize: 1000000 // 1000000 Bytes = 1 MB\n    },\n    fileFilter(req, file, cb) {\n      if (!file.originalname.match(/\\.(png|jpg)$/)) { \n         // upload only png and jpg format\n         return cb(new Error('Please upload a Image'))\n       }\n     cb(undefined, true)\n  }\n}) \n\napp.use(express.static('uploads'));\n\napp.post('/upload', imageUpload.single('photo'), (req, res) => {\n    res.render('upload.ejs',{im_loc: req.file.filename});\n}, (error, req, res, next) => {\n    res.status(400).send({ error: error.message })\n})\n\napp.get('/', (req, res) => {\n    res.render('index.ejs');\n})\n\napp.get('/officer', (req, res) => {\n  res.render('officer.ejs');\n})\n\napp.get('/agent', (req, res) => {\n  res.render('agent.ejs');\n})\n\napp.get('/map', (req, res) => {\n  res.render('map.ejs');\n})\n\napp.listen(PORT, () => {\n    console.log('Listening at ' + PORT );\n});"]}